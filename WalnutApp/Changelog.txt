Create new branch:
July 25, 2024 - Create test-1 branch and edit description in config. This will be where I fix some
messy code and bugs, while leaving the working code alone.


test-1 branch:
July 25, 2024 
- create better variable names for waypoint change tracking, move to MathFunctions.h 
and streamline use in function DrawEntry...does not need to be passed in, since I can access the variable
directly since it is outside function scope.

- Differentiated the difference between the position inside the vector, and actual waypoint ID. Only the former
exists for now. Plan is to track IDs so they can be sorted or moved around inside the vector.


test-1 branch:
July 27, 2024
- ## SQUASHED:: bug (Issue 001) **** Fuel used changes with conversion of nm/km.... it should use the same fuel!!
- ## fixed by addressing how distances and fuel rate calcs are related via conversion factors (rate is in Lbs/NM, and haversine spits out KM)
		SEE: FUELandUNITSdiagram.tif (Desktop) and UnitsIssue.txt (this Project)

		a) Need to understand all the types of calculations and how they relate
		b) PARTIAL - Would be nice to make a core implementation and an external way to configure possible user scenarios that output non-dimensional data to the core

- DONE - Outline the processes attached to the Fuel Use bug - Fuel Rate needed to be converted wrt 'units' as well!
- DONE - re-write distance and fuel calcs
- DONE - Change some more variable names for readability


test-1 branch:
July 28, 2024
- convert fuel rate var to float to allow application of conversion factor which caused truncation as an int.


test-1 branch:
July 29, 2024
- add new fuel flow functionality when setting units
- make haversine function return NAUTICAL MILES to standardize the calculations
- reduce unneeded code duplication that the Issue #001 bug fix solved


test-2 branch: (ADDED) -> will merge with test-1
July 30, 2024
- write ClampInputFloat wrapper for ImGui::InputFloat since the latter didn't have clamp functionality.
- further reduced code complexity as calls improved


test-2 branch: (ADDED) -> will merge with test-1
July 31, 2024
- Add DEBUG loop checks in multiple locations to follow function calls
- More cleanup, as usual.
- added b_valueChanged flag to re-trigger calcs if a value changes
- moved decimal degree calc into haversine
- created a dedicated trigger function to calculate (or recalculate) values
- haversine only runs on changed values
- added a bug fix for NS/EW not triggering the re-calc
- add the unitString text as a label for the distance output.
-- MERGED into test-1 --


feature-1
Aug 2, 2024
- added a rudimentary cycle reduction by adding a 'sleep_for' - THIS NEEDS WORK
- added a "Allow Idling" checkbox set to default true.
- some minor page formatting updates
- Add basic menu formatting and move settings etc off main page.


feature-2
Aug 4, 2024
- WIP - edit/delete/move buttons for waypoints and re-calc logic
- ADD 'name' feature to waypoints to decouple from strict sequential waypoint numbering (especially useful if we re-order waypoints!)
- moved fuel calcs also into the calc function and re-named it to doCalculations() NOTE: There is a re-calc bug.
- created a debug method in WAYPOINT
- refactored to a global vectorPOS and stopped passing around multiple copies: "position," "m_vectorPOS," "VectorPosition" etc in 
all the methods and calcs.


feature-2
Aug 5, 2024
- created new method DrawMain() to move the draw loop into the WAYPOINT class. Then shutting down the b_valueChanged bool INSIDE the 
method but OUTSIDE the for loop	means it will cycle through ALL calcs/waypoints before stopping. This avoids the missing recalcs. 
	(it only cycled through the recalcs ONCE instead of 'recalcs * NumWaypoints')


feature-2
Aug 6, 2024
- Add child windows with borders, rounded corner format, and some dummy buttons to start as placeholders for WPT edits


feature-2
Aug 13, 2024
- cleaned up the fuel params so there's no 'BugCheck' anymore. Did it properly.
- started adding Waypoint names, but need to deal with strings properly.
- more clean up and formatting code for readability and flow.


feature-2
unknown August 2024
- started connecting waypoint move/delete buttons to functions


feature-2 
August 22, 2024
- added imgui.h file to mathfunctions.h to avoid the Intellisense errors


feature-2
August 23, 2024
- moved the pop_back() call outside the draw loop and squashed that bug. Since I had been called pop_back 
before the loop was finished drawing all of the (the last) waypoints, I ended up with bad data and a crash.


feature-2
August 24, 2024
- got delete, insert and move feature working


feature-2
August 27, 2024
- got std::string working in the InputText with the prodding of ChatGPT, who did not give me the answer, but who made me think 
enough to get it working. I still don't understand it.
- added two new files from the ImGui library to handle the resize callback .... Imgui_stdlib.h and ImplStrings.cpp (my naming...)
