CURRENT SESSION:




PRIORITY:

- Take all calculations out of the render loop.

- WIP - cycle reduction - Reduce the number of unnecessary cycles through the loop if nothing is changing


TO DO:

- Variables are scattered EVERYWHERE.....come up with a plan.

- WalnutApp.cpp needs a serious re-write.....stuff is everywhere

- WIP - Menu structure.

- WIP - Deal with North(1), South(-1), East(1), West(-1) so that "-1" affects the haversine output properly.
	This is overly complex due to the inability to attribute specific values to "ImGui::Combo" drop down. Can this be re-written?

- WIP - Look at type-conversion issues with int, float and/or double throughout the code

- Can I create a saved decimal degree Lat/Long in the vector for easy re-use?

- How to deal with limit cases for 'antipodes?'

- Can ImGui be updated to the latest version without breaking Walnut? (NOTE: not without a serious hassle. Tried to add the ImGui remote repo and it didn't end well.)

- Add 'Insert' and 'Delete' waypoint options

- Scratchpad for copy/pasting waypoint data as an interim to actual input from DCS

- Use more sophisticated formatting, perhaps Tables, Tabs, etc.

- Relate Editor map to real coords? CONVERSION Metric (x,y) to LAT/LONT will require ---> xxxxxx deg LAT = 1.0 meters and xxxxxx deg LONG = 1.0 meters
	need the converted LAT/LONG of each map Bullseye/Origin and then the x and y inside the .miz file for each waypoint.


FEATURES:

- Sequential (0, 1, 2 ...) versus Named (2, 1, 3 ... alpha, gamma, beta (etc) ) waypoints for flexibility in the stack
	for route planning. That is to say, the route may not be flown sequentially.
	
- File handling to Save and Load prior work.

- Add Alternate Landing/Refuel waypoints and calculations.


WISH LIST:

- Is it possible to draw outputs on an integral map?

- >>>> Flight and Fuel profiles needed for multiple aircraft.

- Climb and Decel ramps added to legs; Leg subprofiles and graphics?

- How to generate Mission Planner/Kneeboard info?

- Make dropdown list of Maps, and attached Origin LAT/LONG in decimal degrees would probably be best.

- Get app to communicate with DCS to avoid manual waypoint inputs.

- Allow user to pull up a data window for the aircraft. "View Data"

- How could the aircraft configuration code be made generic so that external data could fit all scenarios? 
	IE ... if I want to plug in another aircraft I don't have to create dedicated code?


CLEARED:

- DONE - BUG FIX NS/EW bug by adding b_valueChanged trigger

- DONE - ISSUE 001 - BUG FIX, fuel use was changing when distance unit prefs changed. 
Now fuel use stays same for same distance, converted or not.

- DONE - Stop vector emplace_back race condition in which action occurred EACH while-loop. Vector kept growing!

- DONE - Output not showing due to too close to window edge - [NOTE: Haversine function loop check "testmarker" is 
	showing odd behaviour and not incrementing through the loop as expected. Did I fix this already???] - NO, not fixed!

- DONE - we pass 'a' into drawEntry in MathFunctions.h in a pretty lazy fashion. Name the vars better!!! 
	[Decided to use vector position naming so that I can hash-label the waypoint IDs later to move and edit the matrix]

- DONE - write a wrapper for the InputFloat( ) that clamps the value and calls haversine on changes, (Clamp) waypoint input to limit latitude to +-90 and longitude to +- 180 degrees

- DONE - trigger that calls haversine etc only on changes

- DONE - add char* for unit descriptions. fix unit display on Leg Length - will need a char or string var to draw there.

